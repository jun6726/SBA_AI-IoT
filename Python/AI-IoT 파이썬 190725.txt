반복문 for

for문 - for a in iterable:	(string, list, range...)
for문과 리스트
	for name in ['','','',''] - 리스트의 원소를 하나씩 순서대로 참조
for문과 문자열
	for char in 'sdiem' 문자열에서 문자 하나씩 순서대로 참조
range- 정수 시퀀스를 생성하는 삼후
range는 함수처럼 출력되지만 자료형 자체의 표기법이다 ex. range(10) #range(0,10)으로 출력
for문 continue	break	pass
중첩 for 문

26p **
반복문 while
while condition : 
while문은 카운터가 따로 있어야 함.
	break (파이썬 for, while문(반복문)만 탈출)
무한루프 원할시 while(True)
-> 무한 루프를 탈출하기 위해 조건문을 통해 탈출조건을 넣어야함 break
	ex. while(True) if n==0; break

함수
함수 작성 def
파이썬은 main 함수가 없음. 들여쓰기 하지 않은 첫 명령어부터 실행.

callin : argument, actual parameter, 인수 #호출부에서 부를때 사용하는 인자
definition : parameter, formal parameter, 매개변수 #함수 정의 부분에서 사용하는 인자

반환 값이 없는 경우는 return은 생략 가능

전역변수 - 모든 함수 외부에 생성, 모든 함수에서 사용가능
지연변수 - 함수 내에서 생성된 변수 (매개변수), 함수 내부 사용, 함수 종료 후 소멸
프로그램 내에서 지역변수->전역변수 순으로 참조
함수 내에서 전역 변수로 선언하기 위해 global이라는 명령어를 변수 앞에 선언한다.

**리스트 집합 사전 등을 인수로 함수 호출 시, 인수인 참조(주소)값이 매개변수로 전달
mutable 객체인 리스트 집합 사전 등이 인수로 지정 시, 매개변수와 인수가 동일한 객체(함수2   7p)
**mutable 타입은 함수 안에서 값을 수정하면 함수 밖에서도 변경된 내용이 반영됨.
mutable 타입은 반환할 필요없다.
데이터 값은 남아있지만 주소값이 바뀌기 때문에 참조할순 없다. = 쓰레기 데이터가 남는다

==C언어나 자바는 함수를 사용할때 데이터 값이나 주소값을 선택하여 보내기 때문에 변화에 대해서
컨트롤 가능하지만, 파이썬에서는 데이터 타입에 따른 함수 외부의 변화기 때문에 컨트롤 할 수 없다.


함수 활용과 모듈
내장 라이브러리

파일
파일 열기 읽기 쓰기 닫기
같은 위치에 없다면 절대 경로로 이용해서 접근해야함

파일에 대한 for문이 따로 지원함
