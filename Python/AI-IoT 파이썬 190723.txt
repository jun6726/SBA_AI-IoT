파이썬 버전 2,3 문법 다름, 2는 사용하지않음
shell (프롬프트)
>>>(커서) / Interactive mode
	File > new File = 스크립트 (코드 작성 시에는 편집모드, 한번에 실행/확인 가능해야함)
한줄주석 #, 여러줄 주석 """ """/ ''' '''
스크립트 -F5 > 쉘에서 실행
---파이썬 난이도가 낮아서 사용자가 많아지고, 당연하기 떄문에 해야함, ---
자료형 - 실수형 (고정, 부동 소수점 방식) 바이너리로 저장된 숫자를 변환하면서 정확한 수치가 다르다.
			정확한 숫자 연산을 요구(금융)에서는 수학 관련 라이브러리로 해결

'=' - 변수 대입/할당문
자료형 변환 
	int는 실수형의 문자열은 정수로 변환 X (ex) x = 3.14, int(x) => error // int(float(x)) = 3

---파이썬은 어떤 자료형을 사용할 것인지 선언 X---
print 함수는 스페이스도 자동으로 공백으로 인식
스왑코드 - (C) 	tmp = num1
	  	num1 = num2
	  	num2 = tmp
	(파이썬)	num1, num2 = num2, num1 (여러번 선언해야할 것들을, 한줄로 해결 가능!!)
네이밍 규칙
1. 구문 에러, $ 사용불가
2. 영어 대소문자, _로만 시작, 숫자불가
3. 파이썬 지정단어 불가
4. 대소문자 구분

연산자 
산술연산자 나눗셈 / 은 항상 실수, //이 나눈 몫, ** 지수승  나머지는 다른 언어와 같음

복합 연산자( 기본 언어와 차이점)
//=, **=

내장함수
abs() 절대값 반환
round() 반올림 계산
divmod(x,y)  x // y와 x % y 를 튜플로 반환

외장 Module (ex. math)
ex) from math import	#함수 앞에 모듈선언 X-- 함수명으로만 호출
     from math		#함수 앞에 math, --math.sqrt
     import math as m 	#함수 앞에 m.sqrt --as m은 m이라는 별칭으로 선언

문자열
줄바꿈 - \n 리눅스, 	/\r, 맥, 	\r\n 윈도우
(not) in 연산자 (멤버 연산자) - 문자열 존재 확인,

문자열 인덱싱
양수 : 0 ~ (len - 1)
음수 : -len ~ -1
len : 문자열 길이 반환

문자열 슬라이싱
 인덱스 기반으로 부분 문자열 반환(원본 유지)
 string[start:end:step]

문자열 포맷팅
문자열과 변수를 혼합하여 문자열을 만들때 사용
c언어에서 사용하는 방식과 동일 "%s, %d", %("문자열", 정수)
%10.2f 처럼 소수점 이하 자리숫자를 출력하게 할 때 정수 측 숫자는 제한된 숫자를 초과해서라도 출력
str.format() - 문자열 오브젝트의 메소드 format
문자열에 값을 삽입하고 싶은 위치에 중괄호 지정
format 함수 인자로 삽입을 원하는 값을 입력

문자열 메소드
-- 문자열은 바꿀수 없기 때문에 새로운 변수에 반환 --(문자열은 이미터블)
str.split('구분자') 구분자의 디폴트는 공백
구분자 기준으로 문자열 분리 